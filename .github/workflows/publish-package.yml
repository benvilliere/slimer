name: Publish Package

on:
  release:
    types: [published]

jobs:
  publish-package:
    name: Code Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.9-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Linting
        run: poetry run flake8 ./slimer

      - name: Formatting
        run: poetry run black --check ./slimer

      - name: Security Checks
        run: poetry run bandit -r ./slimer

      - name: Test Coverage
        run: poetry run pytest ./tests --cov=slimer

      - name: Extract Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Bump Version
        run: python ./scripts/bump_version.py --version $RELEASE_VERSION

      - name: Build Package
        run: poetry build

      - name: Publish Package
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_API_TOKEN
          poetry publish --username __token__

      - name: Commit Package Version Update
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Release $RELEASE_VERSION"
            git push origin HEAD:main
          fi
